@model _9th.Sacred.WebApp.Models.CharacterCreateModel

<div class="sacred-card create-section-header">
    <h2 class="card-title">Class</h2>
    <button class="sacred-button-regular create-title-button js-class-next-button">Heroic Awakening <span class="glyphicon glyphicon-chevron-right"></span></button>
</div>

<div class="sacred-2-column-container">
    <div class="sacred-card-sidebar">
        <ul class="class-picker-wrapper char-create-picker-wrapper">
            @foreach (_9th.Sacred.Objects.Data.Class sacredClass in Model.Classes)
            {
                var divId = "classId-" + sacredClass.Id;
                if (Model.SavedCharacter.Class == sacredClass.Id || (Model.SavedCharacter.Class == 0 && sacredClass.Id == 1))
                {
                    <li><a href="" class="js-class-picker-button class-selected" data-class-id="@divId">@sacredClass.Name</a></li>
                }
                else
                {
                    <li><a href="" class="js-class-picker-button" data-class-id="@divId">@sacredClass.Name</a></li>
                }
            }
        </ul>
    </div>

    <div class="sacred-card-sidebar-filler">
        @foreach (_9th.Sacred.Objects.Data.Class sacredClass in Model.Classes)
        {
            string divId = "classId-" + sacredClass.Id;
            string divClass = "hidden";
            if (Model.SavedCharacter.Class == sacredClass.Id || (Model.SavedCharacter.Class == 0 && sacredClass.Id == 1))
            {
                divClass = "js-class-showing-div";
            }

            // Prepare our powers for this class
            int nextTier = 2;

            <div id="@divId" class="race-holder @divClass" data-raw-class-id="@sacredClass.Id">
                <h2>@sacredClass.Name</h2>
                <p class="flavor-text">@sacredClass.FlavorText</p>
                <p>@sacredClass.Description</p>

                <div class="class-powers char-powers-list">
                    <h4>Tier 1 Powers</h4>

                    @foreach (_9th.Sacred.Objects.Data.Power power in sacredClass.Powers)
                    {
                        if (power.Tier == nextTier)
                        {
                            nextTier++;

                            if (power.Type != _9th.Sacred.Objects.Data.PowerType.Paragon)
                            {
                                <h4>Tier @Html.Raw(power.Tier) Powers</h4>
                            }
                            else
                            {
                                <h4>Paragon</h4>
                            }
                        }

                        <div class="class-power-box char-power-box">
                            <h5>@power.Name</h5>
                            <p>@power.Type</p>
                            @if (Convert.ToInt32(power.Type) > 1)
                            {
                                <p>@power.ActionType - @power.EffectType</p>
                            }

                            <p class="power-description">
                                @power.Description
                            </p>

                            <div class="specialization-box">
                                <h6>Specializations</h6>
                                @foreach (_9th.Sacred.Objects.Data.PowerSpecialization specialization in power.Specializations)
                                {
                                    <p>@specialization.Description</p>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>
